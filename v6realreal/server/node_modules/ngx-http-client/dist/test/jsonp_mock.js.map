{"version":3,"file":"jsonp_mock.js","sourceRoot":"","sources":["../../test/jsonp_mock.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;IACE;QAEA,cAAS,GAGL,EAAE,CAAC;IALQ,CAAC;IAOhB,4CAAgB,GAAhB,UAAiB,KAAqB,EAAE,OAAiB;QACvD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAc,CAAC;IACzC,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAqB,IAAU,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpF,wBAAC;AAAD,CAAC,AAbD,IAaC;;AAED;IAAA;IAoBA,CAAC;IAjBC,oCAAa,GAAb,UAAc,GAAa;QACzB,MAAM,CAAC,IAAI,iBAAiB,EAA8B,CAAC;IAC7D,CAAC;IAED,sBAAI,8BAAI;aAAR,cAAkB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAEhC,kCAAW,GAAX,UAAY,IAAS,IAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;IAElD,iCAAU,GAAV,UAAW,IAAS;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;IACH,CAAC;IAED,+BAAQ,GAAR,cAAmB,IAAI,CAAC,IAAM,CAAC,SAAS,CAAC,IAAM,CAAC,IAAW,CAAC,CAAC,CAAC,CAAC;IAE/D,gCAAS,GAAT,UAAU,GAAU,IAAI,IAAI,CAAC,IAAM,CAAC,SAAS,CAAC,KAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/D,mBAAC;AAAD,CAAC,AApBD,IAoBC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport class MockScriptElement {\n  constructor() {}\n\n  listeners: {\n    load?: (event: Event) => void,\n    error?: (err: Error) => void,\n  } = {};\n\n  addEventListener(event: 'load'|'error', handler: Function): void {\n    this.listeners[event] = handler as any;\n  }\n\n  removeEventListener(event: 'load'|'error'): void { delete this.listeners[event]; }\n}\n\nexport class MockDocument {\n  mock: MockScriptElement|null;\n\n  createElement(tag: 'script'): HTMLScriptElement {\n    return new MockScriptElement() as any as HTMLScriptElement;\n  }\n\n  get body(): any { return this; }\n\n  appendChild(node: any): void { this.mock = node; }\n\n  removeNode(node: any): void {\n    if (this.mock === node) {\n      this.mock = null;\n    }\n  }\n\n  mockLoad(): void { this.mock !.listeners.load !(null as any); }\n\n  mockError(err: Error) { this.mock !.listeners.error !(err); }\n}"]}