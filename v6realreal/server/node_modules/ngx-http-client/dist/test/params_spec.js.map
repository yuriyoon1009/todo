{"version":3,"file":"params_spec.js","sourceRoot":"","sources":["../../test/params_spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HttpParams} from '../src/params';\n\nexport function main() {\n  describe('HttpUrlEncodedParams', () => {\n    describe('initialization', () => {\n      it('should be empty at construction', () => {\n        const body = new HttpParams();\n        expect(body.toString()).toEqual('');\n      });\n\n      it('should parse an existing url', () => {\n        const body = new HttpParams({fromString: 'a=b&c=d&c=e'});\n        expect(body.getAll('a')).toEqual(['b']);\n        expect(body.getAll('c')).toEqual(['d', 'e']);\n      });\n    });\n\n    describe('lazy mutation', () => {\n      it('should allow setting parameters', () => {\n        const body = new HttpParams({fromString: 'a=b'});\n        const mutated = body.set('a', 'c');\n        expect(mutated.toString()).toEqual('a=c');\n      });\n\n      it('should allow appending parameters', () => {\n        const body = new HttpParams({fromString: 'a=b'});\n        const mutated = body.append('a', 'c');\n        expect(mutated.toString()).toEqual('a=b&a=c');\n      });\n\n      it('should allow deletion of parameters', () => {\n        const body = new HttpParams({fromString: 'a=b&c=d&e=f'});\n        const mutated = body.delete('c');\n        expect(mutated.toString()).toEqual('a=b&e=f');\n      });\n\n      it('should allow chaining of mutations', () => {\n        const body = new HttpParams({fromString: 'a=b&c=d&e=f'});\n        const mutated = body.append('e', 'y').delete('c').set('a', 'x').append('e', 'z');\n        expect(mutated.toString()).toEqual('a=x&e=f&e=y&e=z');\n      });\n\n      it('should allow deletion of one value of a parameter', () => {\n        const body = new HttpParams({fromString: 'a=1&a=2&a=3&a=4&a=5'});\n        const mutated = body.delete('a', '2').delete('a', '4');\n        expect(mutated.getAll('a')).toEqual(['1', '3', '5']);\n      });\n    });\n\n    describe('read operations', () => {\n      it('should give null if parameter is not set', () => {\n        const body = new HttpParams({fromString: 'a=b&c=d'});\n        expect(body.get('e')).toBeNull();\n        expect(body.getAll('e')).toBeNull();\n      });\n\n      it('should give an accurate list of keys', () => {\n        const body = new HttpParams({fromString: 'a=1&b=2&c=3&d=4'});\n        expect(body.keys()).toEqual(['a', 'b', 'c', 'd']);\n      });\n    });\n  });\n}\n"]}